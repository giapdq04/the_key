"use client"

import { useState } from "react"
import { AlertTriangle, HelpCircle, Clock, Mail, X } from "lucide-react"
import styles from "./ban-notification-dialog.module.scss"

export default function BanNotificationDialog() {
  const [open, setOpen] = useState(true)
  const [activeAccordion, setActiveAccordion] = useState(null)

  if (!open) return null

  const toggleAccordion = (section) => {
    if (activeAccordion === section) {
      setActiveAccordion(null)
    } else {
      setActiveAccordion(section)
    }
  }

  return (
    <div className={styles.dialogOverlay}>
      <div className={styles.dialogContent}>
        <div className={styles.dialogHeader}>
          <div className={styles.titleContainer}>
            <AlertTriangle className={styles.alertIcon} />
            <h2 className={styles.dialogTitle}>Th√¥ng b√°o: B·∫°n ƒë√£ b·ªã c·∫•m truy c·∫≠p</h2>
          </div>
          <button className={styles.closeButton} onClick={() => setOpen(false)} aria-label="ƒê√≥ng">
            <X size={18} />
          </button>
        </div>

        <div className={styles.dialogDescription}>üîí T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã t·∫°m kh√≥a</div>

        <div className={styles.separator}></div>

        <div className={styles.dialogBody}>
          <p className={styles.mainMessage}>Xin l·ªói, t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã c·∫•m do vi ph·∫°m c√°c ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng.</p>

          <div className={styles.accordionContainer}>
            {/* Reasons Accordion */}
            <div className={styles.accordionItem}>
              <button
                className={styles.accordionTrigger}
                onClick={() => toggleAccordion("reasons")}
                aria-expanded={activeAccordion === "reasons"}
              >
                <div className={styles.triggerContent}>
                  <HelpCircle size={20} />
                  <span>L√Ω do c√≥ th·ªÉ d·∫´n ƒë·∫øn vi·ªác b·ªã c·∫•m</span>
                </div>
                <span className={`${styles.chevron} ${activeAccordion === "reasons" ? styles.expanded : ""}`}>‚ñº</span>
              </button>

              {activeAccordion === "reasons" && (
                <div className={styles.accordionContent}>
                  <ul className={styles.reasonsList}>
                    <li>Vi ph·∫°m quy t·∫Øc c·ªông ƒë·ªìng ho·∫∑c ch√≠nh s√°ch s·ª≠ d·ª•ng.</li>
                    <li>S·ª≠ d·ª•ng ng√¥n t·ª´ kh√¥ng ph√π h·ª£p ho·∫∑c n·ªôi dung kh√¥ng ƒë∆∞·ª£c ph√©p.</li>
                    <li>C√≥ h√†nh vi spam ho·∫∑c l·∫°m d·ª•ng h·ªá th·ªëng.</li>
                  </ul>
                </div>
              )}
            </div>

            {/* Appeal Accordion */}
            <div className={styles.accordionItem}>
              <button
                className={styles.accordionTrigger}
                onClick={() => toggleAccordion("appeal")}
                aria-expanded={activeAccordion === "appeal"}
              >
                <div className={styles.triggerContent}>
                  <Mail size={20} />
                  <span>C√°ch khi·∫øu n·∫°i</span>
                </div>
                <span className={`${styles.chevron} ${activeAccordion === "appeal" ? styles.expanded : ""}`}>‚ñº</span>
              </button>

              {activeAccordion === "appeal" && (
                <div className={styles.accordionContent}>
                  <p>
                    N·∫øu b·∫°n nghƒ© r·∫±ng ƒë√¢y l√† nh·∫ßm l·∫´n, vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ qua email{" "}
                    <a href="mailto:support@example.com" className={styles.link}>
                      support@example.com
                    </a>{" "}
                    ho·∫∑c ƒëi·ªÅn v√†o m·∫´u ƒë∆°n khi·∫øu n·∫°i t·∫°i{" "}
                    <a
                      href="http://www.example.com/ban-appeal"
                      target="_blank"
                      rel="noopener noreferrer"
                      className={styles.link}
                    >
                      www.example.com/ban-appeal
                    </a>
                    .
                  </p>
                </div>
              )}
            </div>

            {/* Timeline Accordion */}
            <div className={styles.accordionItem}>
              <button
                className={styles.accordionTrigger}
                onClick={() => toggleAccordion("timeline")}
                aria-expanded={activeAccordion === "timeline"}
              >
                <div className={styles.triggerContent}>
                  <Clock size={20} />
                  <span>Th·ªùi gian x·ª≠ l√Ω</span>
                </div>
                <span className={`${styles.chevron} ${activeAccordion === "timeline" ? styles.expanded : ""}`}>‚ñº</span>
              </button>

              {activeAccordion === "timeline" && (
                <div className={styles.accordionContent}>
                  <p>
                    Vi·ªác xem x√©t c√≥ th·ªÉ m·∫•t t·ª´ 24-72 gi·ªù. N·∫øu t√†i kho·∫£n b·ªã c·∫•m vƒ©nh vi·ªÖn, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o qua
                    email.
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>

        <div className={styles.dialogFooter}>
          <button className={styles.buttonOutline} onClick={() => setOpen(false)}>
            ƒê√≥ng
          </button>
          <button className={styles.buttonPrimary}>G·ª≠i khi·∫øu n·∫°i</button>
        </div>
      </div>
    </div>
  )
}

